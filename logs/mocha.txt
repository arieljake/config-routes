
[0m[0m
[0m  input/collection.map[0m
[2K[0G  [32m  âœ“[0m[90m exits quietly when collection is undefined [0m
[2K[0G  [32m  âœ“[0m[90m makes index value available when indexKey specified [0m

[0m  input/collection.unique[0m
[2K[0G  [32m  âœ“[0m[90m removes duplicates for simple array [0m
[2K[0G  [32m  âœ“[0m[90m removes duplicates for array of objects [0m

[0m  Filter[0m
[2K[0G  [32m  âœ“[0m[90m undefined config returns true [0m
[2K[0G  [32m  âœ“[0m[90m unrecognized config throws error [0m
[2K[0G  [32m  âœ“[0m[90m filter by config string [0m
[2K[0G  [32m  âœ“[0m[90m filter by config object [0m
[2K[0G  [32m  âœ“[0m[90m valueVarName honored [0m
[2K[0G  [32m  âœ“[0m[90m filter array returns AND of all filters [0m

[0m  FnLibrary[0m
[2K[0G  [32m  âœ“[0m[90m returns fn by id [0m

[0m  FnsRunner[0m
[2K[0G  [32m  âœ“[0m[90m promise completes with no fns [0m
[2K[0G  [32m  âœ“[0m[90m promise completes after fns return [0m
[2K[0G  [32m  âœ“[0m[90m promise completes after fns promise compeletes [0m[31m(103ms)[0m
[2K[0G  [32m  âœ“[0m[90m promise catches after fns throw error [0m
[2K[0G  [32m  âœ“[0m[90m promise catches after fns reject promise [0m[31m(103ms)[0m
[2K[0G  [32m  âœ“[0m[90m promise catches after 2nd fn throws error [0m
[2K[0G  [32m  âœ“[0m[90m runnerStarting event fires [0m
[2K[0G  [32m  âœ“[0m[90m runnerComplete event fires [0m
[2K[0G  [32m  âœ“[0m[90m runnerStarting event fires once [0m
[2K[0G  [32m  âœ“[0m[90m fnComplete fires once for each fn [0m
[2K[0G  [32m  âœ“[0m[90m fnError fires if fn throws error [0m
[2K[0G  [32m  âœ“[0m[90m fn error trigger promise rejection with error message [0m
[2K[0G  [32m  âœ“[0m[90m fn error stops sequence [0m[31m(101ms)[0m

[0m  Formatter[0m
[2K[0G  [32m  âœ“[0m[90m undefined config returns value [0m
[2K[0G  [32m  âœ“[0m[90m config string returns formatted value [0m
[2K[0G  [32m  âœ“[0m[90m config object returns formatted value [0m
[2K[0G  [32m  âœ“[0m[90m config array returns value formatted by sequence of formatters [0m

[0m  Route[0m
[2K[0G  [32m  âœ“[0m[90m toObject returns id, name, and state [0m
[2K[0G  [32m  âœ“[0m[90m starting and complete events fired [0m
[2K[0G  [32m  âœ“[0m[90m stepComplete event fires [0m
[2K[0G  [32m  âœ“[0m[90m stepError event fires [0m
[2K[0G  [32m  âœ“[0m[90m promise is resolved with no steps [0m
[2K[0G  [32m  âœ“[0m[90m promise is resolved with step [0m
[2K[0G  [32m  âœ“[0m[90m promise is rejected with step error [0m

[0m  Route[0m
[2K[0G  [32m  âœ“[0m[90m get returns value [0m
[0m    constructor[0m
[2K[0G    [32m  âœ“[0m[90m initializes with empty state when no arguments provided [0m
[2K[0G    [32m  âœ“[0m[90m initializes context with provided state [0m
[0m    set[0m
[2K[0G    [32m  âœ“[0m[90m updates specifed path with provided value [0m
[0m    unset[0m
[2K[0G    [32m  âœ“[0m[90m clears value [0m
[0m    toObject[0m
[2K[0G    [32m  âœ“[0m[90m with no excluded props matches state [0m
[2K[0G    [32m  âœ“[0m[90m omits excluded props [0m
[0m    child[0m
[2K[0G    [32m  âœ“[0m[90m creates child context with empty state when no props specified as inherited [0m
[2K[0G    [32m  âœ“[0m[90m creates child context with specified inherited props [0m
[2K[0G    [32m  âœ“[0m[90m creates child context that dumps with same excluded properties [0m
[0m    assemble[0m
[2K[0G    [32m  âœ“[0m[90m returns struct assembled from provided map [0m
[2K[0G    [32m  âœ“[0m[90m returns struct copied from provided key name [0m

[0m  RouteStep[0m
[2K[0G  [32m  âœ“[0m[90m getExecutable binds context and config [0m
[2K[0G  [32m  âœ“[0m[90m toObject returns id, name and desc [0m

[0m  ObjectPath[0m
[2K[0G  [32m  âœ“[0m[90m deleteIn works when path exists [0m
[2K[0G  [32m  âœ“[0m[90m deleteIn fails silently when path DNE [0m
[2K[0G  [32m  âœ“[0m[90m getValueIn works when path exists [0m
[2K[0G  [32m  âœ“[0m[90m getValueIn returns undefined when path DNE [0m
[2K[0G  [32m  âœ“[0m[90m setValueIn works when full path exists [0m
[2K[0G  [32m  âœ“[0m[90m setValueIn works when some path exists [0m
[2K[0G  [32m  âœ“[0m[90m setValueIn works when no path exists [0m
[2K[0G  [32m  âœ“[0m[90m setValueIn adds value to array [0m
[2K[0G  [32m  âœ“[0m[90m setValueIn adds value to object in array [0m

[0m  ObjectPathPart[0m
[2K[0G  [32m  âœ“[0m[90m isArray returns false [0m
[2K[0G  [32m  âœ“[0m[90m isArray returns true [0m
[2K[0G  [32m  âœ“[0m[90m get arrayName works [0m
[2K[0G  [32m  âœ“[0m[90m getValueIn works [0m
[2K[0G  [32m  âœ“[0m[90m createIn does nothing if property exists [0m
[2K[0G  [32m  âœ“[0m[90m createIn creates object if property does not exist [0m
[2K[0G  [32m  âœ“[0m[90m createIn creates array if property specified with [] [0m
[2K[0G  [32m  âœ“[0m[90m setIn sets property on object when not an array [0m
[2K[0G  [32m  âœ“[0m[90m setIn concatenates value when array specified and already exists [0m
[2K[0G  [32m  âœ“[0m[90m setIn concatenates value when array specified and doesn't exist [0m


[92m [0m[32m 68 passing[0m[90m (373ms)[0m

